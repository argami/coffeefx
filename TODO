This is all theoric still working in the best way to do this

Need to generate animations but at the same time we need to be able to do basic transformations and transitions

first i think the api should be like

move("#object")
	.name("animation_name")
		.animation_property()  //any of the properties in animation (duaration | status | ...)
		.step("from")  // this one can be from | to | or a number (we can also do from() and to() functions)
			.transition(...)
			.transformation(...)
			.property(..)
		.step()....
	.then() //change context
		.name() // new animation
		...
	.then()
		.transformation // be able to set a transformation or a transition directly to 
		.transition			// the content no animation needed
		...
		
move()
	.transform().rotate().skew()
	.animation("name", callback).delay()
		.transform().rotate().skew()
		.step()
			.transform().rotate().skew()
			.transition()...
		.onEnd(callback)
	.end()


The context will be change by default when has no name and:
	name() -> generates a animation name
		step() -> generates a new context in the animation
	then() -> generates a new context


we need to separate Transition and Transformations in diferents classes to be able from each animation as
well in animation be able to use it

class transition
class transformation

class Move extend transition, transformation
	has many animations
	
class animation extend Transition, Transformation


BIG PROBLEM javascript dont allow multiple inheritance ------ 

Maybe using JSON??
	name : {
		class {
			xxx:yyyyy
			yyy:xxxxx
		}
		@keyframe{
			from{}
			to{}
			step{}
		}
	}
 
	{	"transformation":Â {
				xxx:yyyyy
				yyy:xxxxx
				}
		 "animation" : {
				name:
				delay:
				callback: function(){}
				xxx:yyyyy
				yyy:xxxxx

				from {
					xxx:yyyyy
					yyy:xxxxx
				
					}
				.....
			}
		}
ADVANTAGE TO USE JSON EASY TO DEBUG AND TEST
