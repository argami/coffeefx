= Jessie - a Node runner for Jasmine http://stillmaintained.com/futuresimple/jessie.png

Jessie is a Node runner for Jasmine. It was created to provide better reporting on failures, more modular design, easier creation of formatters and optional syntactic sugar.

=== Installation

Stable version is available on npm, so you can install by using:

  npm install jessie

If you want to install the edge development version, simply clone this repo and install from it:

  git clone git://github.com/futuresimple/jessie.git
  npm install ./jessie

=== Usage

  $ jessie
  Usage:
    jessie [OPTIONS] [spec dirs/files]

  Options:
    -f, --format [STRING]  Output format to use (Default is progress)
    -v, --version          Display the current version
    -h, --help             Display help and usage details

Jessie will run specs in any folder you specify, but it will automatically load up 'spec/spec_helper.js' if it is present.

For details on how to use Jasmine, consult the Jasmine docs at https://github.com/pivotal/jasmine/wiki

=== Formatters

Currently Jessie ships with 2 formatters: progress and nested. By default it uses progress. If you want to use nested, you can do it by specifying the -f option:

  jessie spec -f nested

=== Pending specs

Jessie extends Jasmine with the ability of marking pending specs. You have 2 options - one is to call it with only the description, like this:

  it("should be pending")

Another way is to call the pending() function within your spec, like this:

  it("should be pending", function() {
    pending()
  })

Optionally, you can provide a message that will appear within spec results, simply by sending an argument to pending(), like this:

  it("should be pending", function() {
    pending("Add real spec here!")
  })

=== Sugar

If you want, Jessie can extend the built-in prototypes with syntactic sugar, so you can use methods like this:

  variable.should_be("Foo Boo")
  variable.should_not_be(4)
  variable.should_match("Boo")
  variable.should_be_a(String)

The number of these methods is limited and will possibly grow with time.

To use them, put this line into spec/spec_helper.js

  require('jessie').sugar()

=== CoffeeScript

Jessie supports CoffeeScript out of the box. All you need to do is add this line to spec/spec_helper.js

  require('coffee-script')

With that set set up, you can test your CoffeeScript code and have specs in CoffeeScript.

=== Continuous test runner

If you want to have your specs run continuously, see {Jezebel}[https://github.com/benrady/jezebel].

== Development

Jessie is a fresh project, so forks are very welcome!

=== Testing

Tests are in Jasmine and run on Jessie. In order to run them, use the binary in the bin folder (be sure to run `npm install` first to get the dependencies)

  bin/jessie spec

== Acknowledgement

jessie is largely based on https://github.com/mhevery/jasmine-node. The goal of jessie is to be more modular and configurable.

=== Copyright

Copyright (c) 2011 Marcin Bunsch, Future Simple Inc. See LICENSE for details.
